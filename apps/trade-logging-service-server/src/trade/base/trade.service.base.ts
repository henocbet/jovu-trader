/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Trade as PrismaTrade } from "@prisma/client";

export class TradeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TradeCountArgs, "select">): Promise<number> {
    return this.prisma.trade.count(args);
  }

  async trades(args: Prisma.TradeFindManyArgs): Promise<PrismaTrade[]> {
    return this.prisma.trade.findMany(args);
  }
  async trade(args: Prisma.TradeFindUniqueArgs): Promise<PrismaTrade | null> {
    return this.prisma.trade.findUnique(args);
  }
  async createTrade(args: Prisma.TradeCreateArgs): Promise<PrismaTrade> {
    return this.prisma.trade.create(args);
  }
  async updateTrade(args: Prisma.TradeUpdateArgs): Promise<PrismaTrade> {
    return this.prisma.trade.update(args);
  }
  async deleteTrade(args: Prisma.TradeDeleteArgs): Promise<PrismaTrade> {
    return this.prisma.trade.delete(args);
  }
}
