/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TradeLog as PrismaTradeLog } from "@prisma/client";

export class TradeLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TradeLogCountArgs, "select">): Promise<number> {
    return this.prisma.tradeLog.count(args);
  }

  async tradeLogs(
    args: Prisma.TradeLogFindManyArgs
  ): Promise<PrismaTradeLog[]> {
    return this.prisma.tradeLog.findMany(args);
  }
  async tradeLog(
    args: Prisma.TradeLogFindUniqueArgs
  ): Promise<PrismaTradeLog | null> {
    return this.prisma.tradeLog.findUnique(args);
  }
  async createTradeLog(
    args: Prisma.TradeLogCreateArgs
  ): Promise<PrismaTradeLog> {
    return this.prisma.tradeLog.create(args);
  }
  async updateTradeLog(
    args: Prisma.TradeLogUpdateArgs
  ): Promise<PrismaTradeLog> {
    return this.prisma.tradeLog.update(args);
  }
  async deleteTradeLog(
    args: Prisma.TradeLogDeleteArgs
  ): Promise<PrismaTradeLog> {
    return this.prisma.tradeLog.delete(args);
  }
}
